cmake_minimum_required (VERSION 3.1)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
project (OHCS)
if(UNIX)
	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -L/usr/lib64/ -fopenmp -D OpenMP -lboost_system -D UNIX -std=gnu++11 -Wall -O3 -flto -lpthread -lncurses -lrt -Wno-deprecated -lgmpxx -lgmp")
elseif(WIN32)
	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D WIN32")
else()
	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D Unknown")
endif()
OPTION (DEBUG "DEBUG MODE")
if(DEBUG)
	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D DEBUG -g")
endif()
OPTION (SEOHCS "SavetyEncrypt mode")
if(SEOHCS)
	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D SEOHCS")
endif()
OPTION (CROSS "Cross compile mode")
if(CROSS)
	set (CMAKE_CXX_FLAGS "-D WIN32 -L/usr/lib64/ -fopenmp -D OpenMP -lboost_system -std=gnu++11 -Wall -O3 -flto -lpthread -lrt -Wno-deprecated")
endif()
# The version number.
set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wall")
set (OHCS_VERSION_MAJOR 3)
set (OHCS_VERSION_MINOR 0)
set (OHCS_VERSION_BUILD 1)
include_directories (include)
ADD_SUBDIRECTORY (src)
#find_package(OpenMP)
#if (NOT OPENMP_FOUND)
#	message (FATAL_ERROR "OpenMP Not Found Error")
#endif()
